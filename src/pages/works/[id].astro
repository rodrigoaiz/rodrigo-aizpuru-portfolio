---
import { getCollection, render } from "astro:content";
import LayoutWorks from "@/layouts/LayoutWorks.astro";
import Fondo from "@/components/Fondo.astro";
import Redes from "@/components/Redes.astro";
import { Icon } from "astro-icon/components";
import LightBox from "@/components/LightBox.astro";
export async function getStaticPaths() {
  const works = await getCollection("works");

  return works.map((work) => ({
    params: { id: work.slug },
    props: { work }
  }))
}
const { work } = Astro.props;
const { data, slug } = work;
const { title, abstract, image, url, skills, github, gallery } = data;
const { Content } = await render(work)

---
<LayoutWorks title={title}>
  <Redes />
  <Fondo />
  <main class="min-h-dvh flex items-center">
    <div class="max-w-screen-xl mx-auto px-1 mt-1">
      <div class="group mb-2 text-white flex"><a href={`../#${slug}`}><Icon class="inline-block self-center size-6" name="bi:arrow-left" /><span class="inline-block ml-2 uppercase font-medium group-hover:translate-x-2 animate-ease transition-all"><span class="ring-2 ring-dark ring-offset-1 rounded-xl px-3 bg-dark/75">Regresar</span></a></span></div>
      <div class="grid grid-cols-1 md:grid-cols-3 gap-y-2 md:gap-x-5 mt-3 items-center">
        <img class="min-w-full" transition:name={`img-${slug}`} src={image} alt={title} />
        <div class="col-span-2 p-3 xl:pl-10 bg-slate-100/70 backdrop-blur-sm rounded-l-xl border-slate-500">
          <div class="grid xl:grid-cols-3 xl:gap-x-8">
            <div class="xl:col-span-2">
              <h1 class="xl:text-3xl text-2xl text-pretty uppercase font-black border-b border-dashed border-b-dark mb-2 text-dark">{title}</h1>
              <h3 class="text-xl xl:text-2xl font-bold">Resumen</h3>
              <p>{abstract}</p>
            </div>
            <div>
              <h3 class="text-xl xl:text-2xl font-bold">Cliente</h3>
              <p>{data.client}</p>
              <h3 class="text-xl xl:text-2xl font-bold">IT</h3>
              <div class="flex flex-wrap gap-2">
                {
                  data.skills.map((skill) => (
                    <article class="bg-violet shadow-xl text-white text-sm font-normal px-2 rounded-lg">{skill}</article>
                  ))
                }
              </div>
              <div class="flex gap-2 flex-wrap my-2">
                {url && (
                  <a class="bg-yellow text-sm gap-1 rounded-lg flex items-center p-1 hover:scale-105 ease-in-out text-slate-900" href={url} target="_blank">
                    Link <Icon class="size-5" name="bi:link-45deg" />
                  </a>
                )}
                {github && (
                  <a class="bg-yellow text-sm gap-1 rounded-lg flex items-center p-1 hover:scale-105 ease-in-out text-slate-900" href={github} target="_blank">
                    Repositorio <Icon class="size-5" name="bi:github" />
                  </a>
                )}
              </div>
            </div>
          </div>
        </div>
      </div>
      <div id="md" class="max-w-screen-lg mx-auto my-5 bg-dark/75 p-5 shadow-xl text-white">
        <div class="prose prose-invert !text-white !max-w-none">
          <h3 class="!text-2xl font-bold">Informaci√≥n</h3>
          <Content />
        </div>
      </div>
      <div class="grid grid-cols-3 gap-5 mt-3 overflow-hidden">
        {
          gallery ? gallery.map((img) => (
            <div class="zoom-in" data-lightbox="true">
              <img src={img} title={slug} />
            </div>
          )) : null
        }
      </div>
    </div>
  </main>
  <LightBox />
</LayoutWorks>
<style>
  h1, h3 {
    font-family: var(--font-headings);
  }
</style>
